def MainProgram():
  # Global parameters:
  global speed_ms    = 0.250
  global speed_rads  = 0.750
  global accel_mss   = 1.200
  global accel_radss = 1.200
  global blend_radius_m = 0.001
  global ref_frame = p[0,0,0,0,0,0]
  
  # Subprogram ApproachMove
  def ApproachMove():
    ref_frame = p[0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000]
    set_tcp(p[0.000000, 0.000000, 0.090000, 0.000000, 0.000000, 0.000000])
    movel(pose_trans(ref_frame,p[-0.500000, 0.500000, 0.500000, 3.141593, 0.000000, -0.000000]),accel_mss,speed_ms,0,0.001)
    movel(pose_trans(ref_frame,p[0.411480, 0.317120, 0.025400, 3.141593, 0.000000, -0.000000]),accel_mss,speed_ms,0,0.001)
  end
  
  # Subprogram SandingPath
  def SandingPath():
    movel(pose_trans(ref_frame,p[0.320040, 0.317120, 0.025400, 3.141593, 0.000000, -0.000000]),accel_mss,speed_ms,0,0.001)
    movel(pose_trans(ref_frame,p[0.228600, 0.317120, 0.025400, 3.141593, 0.000000, -0.000000]),accel_mss,speed_ms,0,0.001)
    movel(pose_trans(ref_frame,p[0.137160, 0.317120, 0.025400, 3.141593, 0.000000, -0.000000]),accel_mss,speed_ms,0,0.001)
    movel(pose_trans(ref_frame,p[0.045720, 0.317120, 0.025400, 3.141593, 0.000000, -0.000000]),accel_mss,speed_ms,0,0.001)
    movel(pose_trans(ref_frame,p[-0.045720, 0.317120, 0.025400, 3.141593, 0.000000, -0.000000]),accel_mss,speed_ms,0,0.001)
    movel(pose_trans(ref_frame,p[-0.137160, 0.317120, 0.025400, 3.141593, 0.000000, -0.000000]),accel_mss,speed_ms,0,0.001)
    movel(pose_trans(ref_frame,p[-0.228600, 0.317120, 0.025400, 3.141593, 0.000000, -0.000000]),accel_mss,speed_ms,0,0.001)
    movel(pose_trans(ref_frame,p[-0.320040, 0.317120, 0.025400, 3.141593, 0.000000, -0.000000]),accel_mss,speed_ms,0,0.001)
    movel(pose_trans(ref_frame,p[-0.411480, 0.317120, 0.025400, 3.141593, 0.000000, -0.000000]),accel_mss,speed_ms,0,0.001)
    movel(pose_trans(ref_frame,p[-0.411480, 0.408560, 0.025400, 3.141593, 0.000000, -0.000000]),accel_mss,speed_ms,0,0.001)
    movel(pose_trans(ref_frame,p[-0.320040, 0.408560, 0.025400, 3.141593, 0.000000, -0.000000]),accel_mss,speed_ms,0,0.001)
    movel(pose_trans(ref_frame,p[-0.228600, 0.408560, 0.025400, 3.141593, 0.000000, -0.000000]),accel_mss,speed_ms,0,0.001)
    movel(pose_trans(ref_frame,p[-0.137160, 0.408560, 0.025400, 3.141593, 0.000000, -0.000000]),accel_mss,speed_ms,0,0.001)
    movel(pose_trans(ref_frame,p[-0.045720, 0.408560, 0.025400, 3.141593, 0.000000, -0.000000]),accel_mss,speed_ms,0,0.001)
    movel(pose_trans(ref_frame,p[0.045720, 0.408560, 0.025400, 3.141593, 0.000000, -0.000000]),accel_mss,speed_ms,0,0.001)
    movel(pose_trans(ref_frame,p[0.137160, 0.408560, 0.025400, 3.141593, 0.000000, -0.000000]),accel_mss,speed_ms,0,0.001)
    movel(pose_trans(ref_frame,p[0.228600, 0.408560, 0.025400, 3.141593, 0.000000, -0.000000]),accel_mss,speed_ms,0,0.001)
    movel(pose_trans(ref_frame,p[0.320040, 0.408560, 0.025400, 3.141593, 0.000000, -0.000000]),accel_mss,speed_ms,0,0.001)
    movel(pose_trans(ref_frame,p[0.411480, 0.408560, 0.025400, 3.141593, 0.000000, -0.000000]),accel_mss,speed_ms,0,0.001)
    movel(pose_trans(ref_frame,p[0.411480, 0.500000, 0.025400, 3.141593, 0.000000, -0.000000]),accel_mss,speed_ms,0,0.001)
    movel(pose_trans(ref_frame,p[0.320040, 0.500000, 0.025400, 3.141593, 0.000000, -0.000000]),accel_mss,speed_ms,0,0.001)
    movel(pose_trans(ref_frame,p[0.228600, 0.500000, 0.025400, 3.141593, 0.000000, -0.000000]),accel_mss,speed_ms,0,0.001)
    movel(pose_trans(ref_frame,p[0.137160, 0.500000, 0.025400, 3.141593, 0.000000, -0.000000]),accel_mss,speed_ms,0,0.001)
    movel(pose_trans(ref_frame,p[0.045720, 0.500000, 0.025400, 3.141593, 0.000000, -0.000000]),accel_mss,speed_ms,0,0.001)
    movel(pose_trans(ref_frame,p[-0.045720, 0.500000, 0.025400, 3.141593, 0.000000, -0.000000]),accel_mss,speed_ms,0,0.001)
    movel(pose_trans(ref_frame,p[-0.137600, 0.500000, 0.025400, 3.141593, 0.000000, -0.000000]),accel_mss,speed_ms,0,0.001)
    movel(pose_trans(ref_frame,p[-0.228600, 0.500000, 0.025400, 3.141593, 0.000000, -0.000000]),accel_mss,speed_ms,0,0.001)
    movel(pose_trans(ref_frame,p[-0.320040, 0.500000, 0.025400, 3.141593, 0.000000, -0.000000]),accel_mss,speed_ms,0,0.001)
    movel(pose_trans(ref_frame,p[-0.411480, 0.500000, 0.025400, 3.141593, 0.000000, -0.000000]),accel_mss,speed_ms,0,0.001)
    movel(pose_trans(ref_frame,p[-0.411480, 0.591440, 0.025400, 3.141593, 0.000000, -0.000000]),accel_mss,speed_ms,0,0.001)
    movel(pose_trans(ref_frame,p[-0.320040, 0.591440, 0.025400, 3.141593, 0.000000, -0.000000]),accel_mss,speed_ms,0,0.001)
    movel(pose_trans(ref_frame,p[-0.228600, 0.591440, 0.025400, 3.141593, 0.000000, -0.000000]),accel_mss,speed_ms,0,0.001)
    movel(pose_trans(ref_frame,p[-0.137160, 0.591440, 0.025400, 3.141593, 0.000000, -0.000000]),accel_mss,speed_ms,0,0.001)
    movel(pose_trans(ref_frame,p[-0.045720, 0.591440, 0.025400, 3.141593, 0.000000, -0.000000]),accel_mss,speed_ms,0,0.001)
    movel(pose_trans(ref_frame,p[0.045720, 0.591440, 0.025400, 3.141593, 0.000000, -0.000000]),accel_mss,speed_ms,0,0.001)
    movel(pose_trans(ref_frame,p[0.137160, 0.591440, 0.025400, 3.141593, 0.000000, -0.000000]),accel_mss,speed_ms,0,0.001)
    movel(pose_trans(ref_frame,p[0.228600, 0.591440, 0.025400, 3.141593, 0.000000, -0.000000]),accel_mss,speed_ms,0,0.001)
    movel(pose_trans(ref_frame,p[0.320040, 0.591440, 0.025400, 3.141593, 0.000000, -0.000000]),accel_mss,speed_ms,0,0.001)
    movel(pose_trans(ref_frame,p[0.411480, 0.591440, 0.025400, 3.141593, 0.000000, -0.000000]),accel_mss,speed_ms,0,0.001)
    movel(pose_trans(ref_frame,p[0.411480, 0.682880, 0.025400, 3.141593, 0.000000, -0.000000]),accel_mss,speed_ms,0,0.001)
    movel(pose_trans(ref_frame,p[0.320040, 0.682880, 0.025400, 3.141593, 0.000000, -0.000000]),accel_mss,speed_ms,0,0.001)
    movel(pose_trans(ref_frame,p[0.228600, 0.682880, 0.025400, 3.141593, 0.000000, -0.000000]),accel_mss,speed_ms,0,0.001)
    movel(pose_trans(ref_frame,p[0.137160, 0.682880, 0.025400, 3.141593, 0.000000, -0.000000]),accel_mss,speed_ms,0,0.001)
    movel(pose_trans(ref_frame,p[0.045720, 0.682880, 0.025400, 3.141593, 0.000000, -0.000000]),accel_mss,speed_ms,0,0.001)
    movel(pose_trans(ref_frame,p[-0.045720, 0.682880, 0.025400, 3.141593, 0.000000, -0.000000]),accel_mss,speed_ms,0,0.001)
    movel(pose_trans(ref_frame,p[-0.137160, 0.682880, 0.025400, 3.141593, 0.000000, -0.000000]),accel_mss,speed_ms,0,0.001)
    movel(pose_trans(ref_frame,p[-0.228600, 0.682880, 0.025400, 3.141593, 0.000000, -0.000000]),accel_mss,speed_ms,0,0.001)
    movel(pose_trans(ref_frame,p[-0.320040, 0.682880, 0.025400, 3.141593, 0.000000, -0.000000]),accel_mss,speed_ms,0,0.001)
    movel(pose_trans(ref_frame,p[-0.411480, 0.682880, 0.025400, 3.141593, 0.000000, -0.000000]),accel_mss,speed_ms,0,0.001)
  end
  
  # Subprogram Retract
  def Retract():
    movel(pose_trans(ref_frame,p[-0.500000, 0.500000, 0.500000, 3.141593, 0.000000, -0.000000]),accel_mss,speed_ms,0,0.001)
  end
  
  
  # Main program:
  # Program generated by RoboDK v5.7.4 for UR30 on 22/07/2024 04:55:18
  # Using nominal kinematics.
  ApproachMove()
  SandingPath()
  Retract()
  # End of main program
end

MainProgram()
